(()=>{var e={562:()=>{const e=document.querySelector(".container");let t=document.querySelectorAll(".container-item");const n=document.querySelector(".add-ticket"),o=document.querySelector("body");document.querySelectorAll(".radio-btn");let c=document.querySelector(".modalCreateTicket");class s{static download(){const e=new XMLHttpRequest;e.onreadystatechange=function(){if(4!==e.readyState)return;const t=JSON.parse(e.responseText);s.funcAfterDownload(t),s.openDescription(),s.createTicketMethod(),s.statusMethod(),s.deleteTicked(),s.editTicketMethod()},e.open("GET","http://localhost:7070"),e.send()}static funcAfterDownload(t){for(let n=0;n<t.length;n+=1)e.insertAdjacentHTML("beforeend",`\n        <div class="container-item">\n          <div class="radio-btn">\n            <div class="circle"></div>\n          </div>\n          <div class="name-description">\n            <div class="name">${t[n].name}</div>\n            <div class="description descriptionActive">${t[n].description}</div>\n          </div>\n          <div class="date-time">${t[n].created}</div>\n          <div class="action">\n            <div class="edit-btn pencil"></div>\n            <div class="close-btn cross"></div>\n          </div>\n        </div>\n      `)}static openDescription(){document.querySelectorAll(".name").forEach((e=>{e.addEventListener("click",(t=>{e.parentElement.querySelector(".description").classList.toggle("descriptionActive")}))}))}static createTicketMethod(){n.addEventListener("click",(()=>{o.insertAdjacentHTML("beforeend",'\n        <form class="modalCreateTicket">\n          <span class="header">Добавить тикет</span>\n          <div class="short-description">\n            <p>Краткое описание:</p>\n            <textarea name="name" id="text" rows="1" value=""></textarea>\n          </div>\n          <div class="detailed-description">\n            <p>Подробное описание:</p>\n            <textarea name="description" id="text" rows="7" value=""></textarea>\n          </div>\n          <div class=\'modal-list-btn\'>\n            <button type="button" class=\'btn-cancel\'>Отмена</button>\n            <button type="submit" class=\'btn-ok-submit\'>Ок</button>\n          </div>\n        </form>\n      '),s.closeBtnPointEventsNone(),s.circlePointEventsNone(),s.btnCancel(),s.btnOkSubmit()}))}static closeBtnPointEventsNone(){document.querySelectorAll(".close-btn").forEach((e=>{e.style.pointerEvents="none"}))}static circlePointEventsNone(){document.querySelectorAll(".circle").forEach((e=>{e.style.pointerEvents="none"}))}static closeBtnPointEventsAuto(){document.querySelectorAll(".close-btn").forEach((e=>{e.style.pointerEvents="auto"}))}static circlePointEventsAuto(){document.querySelectorAll(".circle").forEach((e=>{e.style.pointerEvents="auto"}))}static btnCancel(){const e=document.querySelector(".btn-cancel");e&&e.addEventListener("click",(()=>{c=document.querySelector(".modalCreateTicket"),c.remove(),s.closeBtnPointEventsAuto(),s.circlePointEventsAuto()}))}static btnOkSubmit(){c=document.querySelector(".modalCreateTicket"),c&&c.addEventListener("submit",(t=>{t.preventDefault(),console.log("dfffffff");const n=Array.from(c.elements).filter((e=>{let{name:t}=e;return t})).map((e=>{let{name:t,value:n}=e;return`${t}=${encodeURIComponent(n)}`})).join("&"),o=new XMLHttpRequest;o.open("POST","http://localhost:7070/?method=createTicket"),o.addEventListener("load",(()=>{if(o.status>=200&&o.status<300)try{const t=JSON.parse(o.responseText),n=t[t.length-1];e.insertAdjacentHTML("beforeend",`\n               <div class="container-item">\n                <div class="radio-btn">\n                  <div class="circle"></div>\n                </div>\n                <div class="name">${n.name}</div>\n                <div class="date-time">${n.created}</div>\n                <div class="action">\n                  <div class="edit-btn pencil"></div>\n                  <div class="close-btn cross"></div>\n                </div>\n              </div>\n            `),location.reload(),c.remove()}catch(e){console.error(e)}})),o.setRequestHeader("Content-type","application/x-www-form-urlencoded"),o.send(n),s.closeBtnPointEventsAuto(),s.circlePointEventsAuto()}))}static statusMethod(){const e=document.querySelectorAll(".circle");e&&e.forEach(((e,t)=>{e.addEventListener("click",(n=>{if(n.target.classList.toggle("check"),n.preventDefault(),e.classList.contains("check")){const e=`${t}`,n=new XMLHttpRequest;n.open("PATCH","http://localhost:7070/?method=checkmarkTrue"),n.addEventListener("load",(()=>{if(n.status>=200&&n.status<300)try{const e=JSON.parse(n.responseText);console.log(e)}catch(e){console.error(e)}})),n.setRequestHeader("Content-type","application/x-www-form-urlencoded"),n.send(e)}else{const e=`${t}`,n=new XMLHttpRequest;n.open("PATCH","http://localhost:7070/?method=checkmarkFalse"),n.addEventListener("load",(()=>{if(n.status>=200&&n.status<300)try{const e=JSON.parse(n.responseText);console.log(e)}catch(e){console.error(e)}})),n.setRequestHeader("Content-type","application/x-www-form-urlencoded"),n.send(e)}}));const n=new XMLHttpRequest;n.onreadystatechange=function(){4===n.readyState&&(!0===JSON.parse(n.responseText)[t].status?e.classList.add("check"):e.classList.remove("check"))},n.open("GET","http://localhost:7070"),n.send()}))}static deleteTicked(){document.querySelectorAll(".close-btn").forEach(((e,t)=>{e.addEventListener("click",(()=>{null===document.querySelector(".modalDeleteTicket")&&(o.insertAdjacentHTML("beforeend",'\n        <div class="modalDeleteTicket">\n          <span class="header">Удалить тикет</span>\n          <div class="warningDelTicket">\n            <p>Вы уверены, что хотите удалить тикет? Это действие необратимо.</p>\n          </div>\n          <div class=\'modal-list-btn\'>\n            <button type="button" class=\'btn-cancel\'>Отмена</button>\n            <button type="submit" class=\'btn-ok-submit\'>Ок</button>\n          </div>\n        </div>\n      '),n.style.pointerEvents="none",s.circlePointEventsNone(),document.querySelector(".btn-cancel").onclick=function(){document.querySelector(".modalDeleteTicket").remove(),n.style.pointerEvents="auto",s.circlePointEventsAuto()},document.querySelector(".btn-ok-submit").onclick=function(){const o=`${t}`,c=new XMLHttpRequest;c.open("DELETE",`http://localhost:7070/?method=deleteTicked${o}`),c.addEventListener("load",(()=>{if(c.status>=200&&c.status<300)try{const e=JSON.parse(c.responseText);console.log(e)}catch(e){console.error(e)}})),c.setRequestHeader("Content-type","application/x-www-form-urlencoded"),c.send(),e.closest(".container-item").remove(),document.querySelector(".modalDeleteTicket").remove(),n.style.pointerEvents="auto",s.circlePointEventsAuto()})}))}))}static editTicketMethod(){document.querySelectorAll(".edit-btn").forEach(((e,c)=>{e.addEventListener("click",(()=>{let e=document.querySelector(".modalEditTicket");const i=document.querySelector(".modalCreateTicket"),a=document.querySelector(".modalDeleteTicket");null===e&&null===i&&null===a&&o.insertAdjacentHTML("beforeend",'\n          <form class="modalEditTicket">\n          <span class="header">Изменить тикет</span>\n          <div class="short-description">\n            <p>Краткое описание:</p>\n            <textarea name="name" id="text" rows="1" value=""></textarea>\n          </div>\n          <div class="detailed-description">\n            <p>Подробное описание:</p>\n            <textarea name="description" id="text" rows="7" value=""></textarea>\n          </div>\n          <div class=\'modal-list-btn\'>\n            <button type="button" class=\'btn-cancelEditModal\'>Отмена</button>\n            <button type="submit" class=\'btn-ok-submitEditModal\'>Ок</button>\n          </div>\n        </form>\n        '),n.style.pointerEvents="none",s.closeBtnPointEventsNone(),s.circlePointEventsNone(),document.querySelector(".btn-cancelEditModal").onclick=function(){document.querySelector(".modalEditTicket").remove(),n.style.pointerEvents="auto",s.closeBtnPointEventsAuto(),s.circlePointEventsAuto()},e=document.querySelector(".modalEditTicket"),e&&e.addEventListener("submit",(o=>{o.preventDefault();const i=Array.from(e.elements).filter((e=>{let{name:t}=e;return t})).map((e=>{let{name:t,value:n}=e;return`${t}=${encodeURIComponent(n)}`})).join("&"),a=new XMLHttpRequest;a.open("PATCH",`http://localhost:7070/?method=editTicket${c}`),a.addEventListener("load",(()=>{if(a.status>=200&&a.status<300)try{const n=JSON.parse(a.responseText);t=document.querySelectorAll(".container-item"),t[c].querySelector(".name").textContent=n[c].name,t[c].querySelector(".description").textContent=n[c].description,e.remove()}catch(e){console.error(e)}})),a.setRequestHeader("Content-type","application/x-www-form-urlencoded"),a.send(i),n.style.pointerEvents="auto",s.closeBtnPointEventsAuto(),s.circlePointEventsAuto()}))}))}))}}s.download()},766:e=>{e.exports='<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width,initial-scale=1"> <meta http-equiv="X-UA-Compatible" content="ie=edge"> <title>Document</title> </head> <body> <div class="content"> <div class="field-button"> <button type="button" class="add-ticket">Добавить тикет</button> </div> <div class="container"></div> </div> </body> </html> '}},t={};function n(o){var c=t[o];if(void 0!==c)return c.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";n(562),n(766)})()})();
//# sourceMappingURL=main.js.map