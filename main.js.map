{"version":3,"file":"main.js","mappings":"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","sources":["webpack://ahj-dz7--working-http-frontend/./src/js/app.js","webpack://ahj-dz7--working-http-frontend/./src/index.html","webpack://ahj-dz7--working-http-frontend/webpack/bootstrap","webpack://ahj-dz7--working-http-frontend/webpack/runtime/compat get default export","webpack://ahj-dz7--working-http-frontend/webpack/runtime/define property getters","webpack://ahj-dz7--working-http-frontend/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-shadow */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-restricted-globals */\nconst container = document.querySelector('.container');\nlet containerItem = document.querySelectorAll('.container-item');\nconst addTicket = document.querySelector('.add-ticket');\nconst body = document.querySelector('body');\nconst radioBtn = document.querySelectorAll('.radio-btn');\nlet modalCreateTicket = document.querySelector('.modalCreateTicket');\n\nclass TicketsList {\n  // загрузка тикетов с сервера:\n  static download() {\n    const xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState !== 4) return;\n      const data = JSON.parse(xhr.responseText);\n      TicketsList.funcAfterDownload(data);\n      TicketsList.openDescription();\n      TicketsList.createTicketMethod();\n      TicketsList.statusMethod();\n      TicketsList.deleteTicked();\n      TicketsList.editTicketMethod();\n    };\n    xhr.open('GET', 'http://localhost:7070');\n    xhr.send();\n  }\n\n  // вставка загруженных с сервера тикетов:\n  static funcAfterDownload(data) {\n    for (let i = 0; i < data.length; i += 1) {\n      container.insertAdjacentHTML('beforeend', `\n        <div class=\"container-item\">\n          <div class=\"radio-btn\">\n            <div class=\"circle\"></div>\n          </div>\n          <div class=\"name-description\">\n            <div class=\"name\">${data[i].name}</div>\n            <div class=\"description descriptionActive\">${data[i].description}</div>\n          </div>\n          <div class=\"date-time\">${data[i].created}</div>\n          <div class=\"action\">\n            <div class=\"edit-btn pencil\"></div>\n            <div class=\"close-btn cross\"></div>\n          </div>\n        </div>\n      `);\n    }\n  }\n\n  // обработка отображения подробного описания:\n  static openDescription() {\n    const names = document.querySelectorAll('.name');\n    names.forEach((item) => {\n      item.addEventListener('click', (e) => {\n        const descriptionNew = item.parentElement.querySelector('.description');\n        descriptionNew.classList.toggle('descriptionActive');\n      });\n    });\n  }\n\n  // обработка модального окна добавления тикета\n  static createTicketMethod() {\n    // появление модального окна при клике по кнопке \"Добавить тикет\":\n    addTicket.addEventListener('click', () => {\n      body.insertAdjacentHTML('beforeend', `\n        <form class=\"modalCreateTicket\">\n          <span class=\"header\">Добавить тикет</span>\n          <div class=\"short-description\">\n            <p>Краткое описание:</p>\n            <textarea name=\"name\" id=\"text\" rows=\"1\" value=\"\"></textarea>\n          </div>\n          <div class=\"detailed-description\">\n            <p>Подробное описание:</p>\n            <textarea name=\"description\" id=\"text\" rows=\"7\" value=\"\"></textarea>\n          </div>\n          <div class='modal-list-btn'>\n            <button type=\"button\" class='btn-cancel'>Отмена</button>\n            <button type=\"submit\" class='btn-ok-submit'>Ок</button>\n          </div>\n        </form>\n      `);\n      TicketsList.closeBtnPointEventsNone();\n      TicketsList.circlePointEventsNone();\n      TicketsList.btnCancel();\n      TicketsList.btnOkSubmit();\n    });\n  }\n\n  static closeBtnPointEventsNone() {\n    const closeBtnPointEvents = document.querySelectorAll('.close-btn');\n    closeBtnPointEvents.forEach((item) => {\n      item.style.pointerEvents = 'none';\n    });\n  }\n\n  static circlePointEventsNone() {\n    const circlePointEvents = document.querySelectorAll('.circle');\n    circlePointEvents.forEach((item) => {\n      item.style.pointerEvents = 'none';\n    });\n  }\n\n  static closeBtnPointEventsAuto() {\n    const closeBtnPointEvents = document.querySelectorAll('.close-btn');\n    closeBtnPointEvents.forEach((item) => {\n      item.style.pointerEvents = 'auto';\n    });\n  }\n\n  static circlePointEventsAuto() {\n    const circlePointEventsAuto = document.querySelectorAll('.circle');\n    circlePointEventsAuto.forEach((item) => {\n      item.style.pointerEvents = 'auto';\n    });\n  }\n\n  // обработка кнопки Отмена модального окна:\n  static btnCancel() {\n    const btnCancel = document.querySelector('.btn-cancel');\n    if (btnCancel) {\n      btnCancel.addEventListener('click', () => {\n        modalCreateTicket = document.querySelector('.modalCreateTicket');\n        modalCreateTicket.remove();\n\n        TicketsList.closeBtnPointEventsAuto();\n        TicketsList.circlePointEventsAuto();\n      });\n    }\n  }\n\n  // обработка Кнопки Ок модального окна:\n  static btnOkSubmit() {\n    modalCreateTicket = document.querySelector('.modalCreateTicket');\n    if (modalCreateTicket) {\n      modalCreateTicket.addEventListener('submit', (e) => {\n        e.preventDefault();\n        console.log('dfffffff');\n        const bodySubmit = Array.from(modalCreateTicket.elements)\n          .filter(({ name }) => name)\n          .map(({ name, value }) => `${name}=${encodeURIComponent(value)}`)\n          .join('&');\n          // console.log(bodySubmit)\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', 'http://localhost:7070/?method=createTicket');\n        xhr.addEventListener('load', () => {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              const data = JSON.parse(xhr.responseText);\n              const newData = data[data.length - 1];\n              // console.log(data)\n              container.insertAdjacentHTML('beforeend', `\n               <div class=\"container-item\">\n                <div class=\"radio-btn\">\n                  <div class=\"circle\"></div>\n                </div>\n                <div class=\"name\">${newData.name}</div>\n                <div class=\"date-time\">${newData.created}</div>\n                <div class=\"action\">\n                  <div class=\"edit-btn pencil\"></div>\n                  <div class=\"close-btn cross\"></div>\n                </div>\n              </div>\n            `);\n              location.reload();\n              modalCreateTicket.remove();\n            } catch (err) {\n              console.error(err);\n            }\n          }\n        });\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.send(bodySubmit);\n\n        TicketsList.closeBtnPointEventsAuto();\n        TicketsList.circlePointEventsAuto();\n      });\n    }\n  }\n\n  // обработка статуса тикета (есть галочка или нет?):\n  static statusMethod() {\n    const circleArray = document.querySelectorAll('.circle');\n    if (circleArray) {\n      circleArray.forEach((item, idx) => {\n        item.addEventListener('click', (e) => {\n          e.target.classList.toggle('check');\n\n          e.preventDefault();\n          if (item.classList.contains('check')) {\n            const bodySubmit = `${idx}`;\n            const xhr = new XMLHttpRequest();\n            xhr.open('PATCH', 'http://localhost:7070/?method=checkmarkTrue');\n            xhr.addEventListener('load', () => {\n              if (xhr.status >= 200 && xhr.status < 300) {\n                try {\n                  const data = JSON.parse(xhr.responseText);\n                  console.log(data);\n                } catch (err) {\n                  console.error(err);\n                }\n              }\n            });\n            xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n            xhr.send(bodySubmit);\n          } else {\n            const bodySubmit = `${idx}`;\n            const xhr = new XMLHttpRequest();\n            xhr.open('PATCH', 'http://localhost:7070/?method=checkmarkFalse');\n            xhr.addEventListener('load', () => {\n              if (xhr.status >= 200 && xhr.status < 300) {\n                try {\n                  const data = JSON.parse(xhr.responseText);\n                  console.log(data);\n                } catch (err) {\n                  console.error(err);\n                }\n              }\n            });\n            xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n            xhr.send(bodySubmit);\n          }\n        });\n\n        const xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState !== 4) return;\n          const data = JSON.parse(xhr.responseText);\n          if (data[idx].status === true) {\n            item.classList.add('check');\n          } else {\n            item.classList.remove('check');\n          }\n        };\n        xhr.open('GET', 'http://localhost:7070');\n        xhr.send();\n      });\n    }\n  }\n\n  // обработка удаления тикета (нажатие на крестик):\n  static deleteTicked() {\n    const closeBtn = document.querySelectorAll('.close-btn');\n    closeBtn.forEach((item, idx) => {\n      item.addEventListener('click', () => {\n        const modalDeleteTicket = document.querySelector('.modalDeleteTicket');\n        if (modalDeleteTicket === null) {\n          body.insertAdjacentHTML('beforeend', `\n        <div class=\"modalDeleteTicket\">\n          <span class=\"header\">Удалить тикет</span>\n          <div class=\"warningDelTicket\">\n            <p>Вы уверены, что хотите удалить тикет? Это действие необратимо.</p>\n          </div>\n          <div class='modal-list-btn'>\n            <button type=\"button\" class='btn-cancel'>Отмена</button>\n            <button type=\"submit\" class='btn-ok-submit'>Ок</button>\n          </div>\n        </div>\n      `);\n\n          addTicket.style.pointerEvents = 'none';\n          TicketsList.circlePointEventsNone();\n\n          // обработка нажатия на кнопку 'Отмена' модального окна удаления тикета:\n          const btnCancel = document.querySelector('.btn-cancel');\n          btnCancel.onclick = function f() {\n            const modalDeleteTicket = document.querySelector('.modalDeleteTicket');\n            modalDeleteTicket.remove();\n\n            addTicket.style.pointerEvents = 'auto';\n            TicketsList.circlePointEventsAuto();\n          };\n\n          // обработка нажатия на кнопку 'Ок' модального окна удаления тикета:\n          const btnOkSubmit = document.querySelector('.btn-ok-submit');\n          btnOkSubmit.onclick = function f() {\n            const bodySubmit = `${idx}`;\n            const xhr = new XMLHttpRequest();\n            xhr.open('DELETE', `http://localhost:7070/?method=deleteTicked${bodySubmit}`);\n            xhr.addEventListener('load', () => {\n              if (xhr.status >= 200 && xhr.status < 300) {\n                try {\n                  const data = JSON.parse(xhr.responseText);\n                  console.log(data);\n                } catch (err) {\n                  console.error(err);\n                }\n              }\n            });\n            xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n            xhr.send();\n\n            item.closest('.container-item').remove();\n            const modalDeleteTicket = document.querySelector('.modalDeleteTicket');\n            modalDeleteTicket.remove();\n\n            addTicket.style.pointerEvents = 'auto';\n            TicketsList.circlePointEventsAuto();\n          };\n        }\n      });\n    });\n  }\n\n  // обработка изменения тикета (нажатие на карандаш):\n  static editTicketMethod() {\n    const editBtn = document.querySelectorAll('.edit-btn');\n    editBtn.forEach((item, idx) => {\n      item.addEventListener('click', () => {\n        let modalEditTicket = document.querySelector('.modalEditTicket');\n        const modalCreateTicket = document.querySelector('.modalCreateTicket');\n        const modalDeleteTicket = document.querySelector('.modalDeleteTicket');\n\n        if (modalEditTicket === null && modalCreateTicket === null && modalDeleteTicket === null) {\n          body.insertAdjacentHTML('beforeend', `\n          <form class=\"modalEditTicket\">\n          <span class=\"header\">Изменить тикет</span>\n          <div class=\"short-description\">\n            <p>Краткое описание:</p>\n            <textarea name=\"name\" id=\"text\" rows=\"1\" value=\"\"></textarea>\n          </div>\n          <div class=\"detailed-description\">\n            <p>Подробное описание:</p>\n            <textarea name=\"description\" id=\"text\" rows=\"7\" value=\"\"></textarea>\n          </div>\n          <div class='modal-list-btn'>\n            <button type=\"button\" class='btn-cancelEditModal'>Отмена</button>\n            <button type=\"submit\" class='btn-ok-submitEditModal'>Ок</button>\n          </div>\n        </form>\n        `);\n        }\n\n        addTicket.style.pointerEvents = 'none';\n        TicketsList.closeBtnPointEventsNone();\n        TicketsList.circlePointEventsNone();\n\n        // обработка нажатия на кнопку 'Отмена' модального окна изменения тикета:\n        const btnCancelEditModal = document.querySelector('.btn-cancelEditModal');\n        btnCancelEditModal.onclick = function f() {\n          const modalEditTicket = document.querySelector('.modalEditTicket');\n          modalEditTicket.remove();\n\n          addTicket.style.pointerEvents = 'auto';\n          TicketsList.closeBtnPointEventsAuto();\n          TicketsList.circlePointEventsAuto();\n        };\n\n        // обработка нажатия на кнопку 'Ок' модального окна изменения тикета:\n        modalEditTicket = document.querySelector('.modalEditTicket');\n        if (modalEditTicket) {\n          modalEditTicket.addEventListener('submit', (e) => {\n            e.preventDefault();\n\n            const bodySubmit = Array.from(modalEditTicket.elements)\n              .filter(({ name }) => name)\n              .map(({ name, value }) => `${name}=${encodeURIComponent(value)}`)\n              .join('&');\n\n            const xhr = new XMLHttpRequest();\n            xhr.open('PATCH', `http://localhost:7070/?method=editTicket${idx}`);\n            xhr.addEventListener('load', () => {\n              if (xhr.status >= 200 && xhr.status < 300) {\n                try {\n                  const data = JSON.parse(xhr.responseText);\n                  containerItem = document.querySelectorAll('.container-item');\n\n                  const editName = containerItem[idx].querySelector('.name');\n                  editName.textContent = data[idx].name;\n                  const editDescription = containerItem[idx].querySelector('.description');\n                  editDescription.textContent = data[idx].description;\n\n                  modalEditTicket.remove();\n                } catch (err) {\n                  console.error(err);\n                }\n              }\n            });\n            xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n            xhr.send(bodySubmit);\n\n            addTicket.style.pointerEvents = 'auto';\n            TicketsList.closeBtnPointEventsAuto();\n            TicketsList.circlePointEventsAuto();\n          });\n        }\n      });\n    });\n  }\n}\nTicketsList.download();\n","// Module\nvar code = \"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\"> <title>Document</title> </head> <body> <div class=\\\"content\\\"> <div class=\\\"field-button\\\"> <button type=\\\"button\\\" class=\\\"add-ticket\\\">Добавить тикет</button> </div> <div class=\\\"container\\\"></div> </div> </body> </html> \";\n// Exports\nmodule.exports = code;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))"],"names":["container","document","querySelector","containerItem","querySelectorAll","addTicket","body","modalCreateTicket","TicketsList","xhr","XMLHttpRequest","onreadystatechange","readyState","data","JSON","parse","responseText","funcAfterDownload","openDescription","createTicketMethod","statusMethod","deleteTicked","editTicketMethod","open","send","i","length","insertAdjacentHTML","name","description","created","forEach","item","addEventListener","e","parentElement","classList","toggle","closeBtnPointEventsNone","circlePointEventsNone","btnCancel","btnOkSubmit","style","pointerEvents","remove","closeBtnPointEventsAuto","circlePointEventsAuto","preventDefault","console","log","bodySubmit","Array","from","elements","filter","map","value","encodeURIComponent","join","status","newData","location","reload","err","error","setRequestHeader","circleArray","idx","target","contains","add","onclick","closest","modalEditTicket","modalDeleteTicket","textContent","download","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}